<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>微信小程序技能篇</title>
      <link href="/wxprogram/"/>
      <url>/wxprogram/</url>
      
        <content type="html"><![CDATA[<h2 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h2><h4 id="（A）简单版：前端-php后台"><a href="#（A）简单版：前端-php后台" class="headerlink" title="（A）简单版：前端+php后台"></a>（A）简单版：前端+php后台</h4><h4 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h4><ol><li>表单（输入框、提交按钮、提交的name值)</li><li>接收表单数据（js获取表单name=keyword的值）</li><li>通过wx.request向服务器后端发起请求查询数据库</li><li>返回JSON格式的数据给小程序，js解析渲染到小程序前端展示</li></ol><h4 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h4><p><img src="../wxprogram/2articlex.png" alt="alt text" title="Title"></p><h4 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h4><p>index.wxml</p><pre><code>&lt;!-- 标题 --&gt;&lt;view class=&quot;title&quot;&gt;小程序搜索&lt;/view&gt;&lt;!-- 搜索框view --&gt;&lt;view class=&quot;search_con&quot;&gt;&lt;!-- 表单 --&gt;  &lt;form bindsubmit=&quot;formSubmit&quot;&gt;  &lt;!-- 记得设置name值，这样JS才能接收name=keyword的值 --&gt;    &lt;input type=&quot;text&quot; name=&quot;keyword&quot; class=&quot;search_input&quot; placeholder=&#39;你要找什么呢？&#39;/&gt;    &lt;button formType=&quot;submit&quot; class=&quot;search_btn&quot;&gt;搜索&lt;/button&gt;      &lt;/form&gt;&lt;/view&gt;&lt;!-- 搜索结果展示 --&gt;&lt;view wx:for=&quot;{{re}}&quot; wx:key=&quot;re&quot; class=&quot;search_result&quot;&gt;&lt;!-- 当提交空白表单的时候 --&gt;  &lt;view class=&quot;empty&quot;&gt;{{item.empty}}&lt;/view&gt;  &lt;!-- 当有搜索结果的时候 --&gt;  &lt;view class=&quot;resname&quot;&gt;{{item.resname}}&lt;/view&gt;  &lt;!-- 当查询不到结果的时候 --&gt;  &lt;view class=&quot;noresult&quot;&gt;{{item.noresult}}&lt;/view&gt;&lt;/view&gt;</code></pre><p>index.js</p><pre><code>const app = getApp()Page({  data: {},  //执行点击事件  formSubmit: function (e) {    //声明当天执行的    var that = this;    //获取表单所有name=keyword的值    var formData = e.detail.value.keyword;    //显示搜索中的提示    wx.showLoading({      title: &#39;搜索中&#39;,      icon: &#39;loading&#39;    })    //向搜索后端服务器发起请求    wx.request({      //URL      url: &#39;http://localhost/search.php?keyword=&#39; + formData,      //发送的数据      data: formData,      //请求的数据时JSON格式      header: {        &#39;Content-Type&#39;:&#39;application/json&#39;      },      //请求成功      success: function (res) {        //控制台打印（开发调试用）        console.log(res.data)        //把所有结果存进一个名为re的数组        that.setData({          re: res.data,        })        //搜索成功后，隐藏搜索中的提示        wx.hideLoading();      }    })  },})</code></pre><p>index.wxss</p><pre><code>/* 搜索样式 */.title{  text-align: center;  font-size: 20px;  font-weight: bold;}.search_con{  width: 80%;  margin:20px auto;}.search_con .search_input{  border: 1px solid rgb(214, 211, 211);  height: 45px;  border-radius: 100px;  font-size: 17px;  padding-left: 15px;/*此处要用padding-left才可以把光标往右移动15像素，不可以用text-indent*/  color: #333;}.search_con .search_btn{  margin-top: 15px;  width: 100%;  height: 45px;  background: #56b273;  color: #fff;  border-radius: 100px;}.search_result{  width: 80%;  margin:10px auto;}.search_result .empty{  text-align: center;  color: #f00;  font-size: 15px;}.search_result .noresult{  text-align: center;  color: #666;  font-size: 15px;}.search_result .resname{  text-align: left;  color: #333;  font-size: 15px;}</code></pre><p>服务器端 search.php</p><pre><code>&lt;?phpheader(&#39;Content-Type:application/json&#39;);//获取表单数据$keyword1 = $_GET[&quot;keyword&quot;];//过滤表单空格$keyword2 = trim($keyword1);//当表单提交空白数据时if(empty($keyword2)){    //构建数组    $arr = array(            &quot;empty&quot; =&gt; &quot;表单不能为空&quot;        );    //把数组转换为json    $data = json_encode($arr);    echo &quot;[$data]&quot;;}else{//过滤表单特殊字符$replace = array(&#39;!&#39;,&#39;@&#39;,&#39;#&#39;,&#39;$&#39;,&#39;%&#39;,&#39;^&#39;,&#39;&amp;&#39;,&#39;*&#39;,&#39;(&#39;,&#39;)&#39;,&#39;_&#39;,&#39;-&#39;,&#39;+&#39;,&#39;=&#39;,&#39;{&#39;,&#39;}&#39;,&#39;[&#39;,&#39;]&#39;,&#39;;&#39;,&#39;:&#39;,&#39;&quot;&#39;,&#39;&lt;&#39;,&#39;&gt;&#39;,&#39;?&#39;,&#39;/&#39;,&#39;|&#39;);$keyword3 = str_replace($replace, &#39;&#39;, $keyword2);// 连接数据库$con = mysql_connect(&quot;数据库地址&quot;,&quot;数据库账号&quot;,&quot;数据库密码&quot;);if (!$con){die(&#39;Could not connect: &#39; . mysql_error());}mysql_select_db(&quot;数据库名&quot;, $con);mysql_query(&quot;SET NAMES UTF8&quot;);//查询数据库$result = mysql_query(&quot;SELECT * FROM 表名 WHERE 需要查询的字段 like &#39;%$keyword3%&#39; ORDER BY ID DESC&quot;);$results = array();//查询数据库是否存在这条记录$exist = mysql_num_rows($result);if ($exist) {    //遍历输出    while ($row = mysql_fetch_assoc($result)){        $results[] = $row;        }    //输出JSON    echo json_encode($results);    //当查询无结果的时候    }else{        //构建数组        $arr = array(            &quot;noresult&quot; =&gt; &quot;暂无结果&quot;        );        //把数组转换为json        $data = json_encode($arr);        echo &quot;[$data]&quot;;}//断开数据库连接mysql_close($con);}?&gt;</code></pre><h4 id="（B）复杂版：待补充"><a href="#（B）复杂版：待补充" class="headerlink" title="（B）复杂版：待补充"></a>（B）复杂版：待补充</h4><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>节流处理(频繁调动api的时候需要)</p><pre><code>// 节流const throttle = function(fn, delay) {  let lastTime = 0  return function () {    let nowTime = Date.now()    if (nowTime - lastTime &gt; delay || !lastTime) {      fn.apply(this, arguments)      lastTime = nowTime    }  }}</code></pre><pre><code>Page({  // ...  // 输入搜索关键字  input: util.throttle(function () {    let val = arguments[0].detail.value    if (val === &#39;&#39;) {      this.setData({        suggList: []      })      this.changeSearchCls()      return false    }    api.getSuggestion({      keyword: val    })      .then((res) =&gt; {        this.setData({          suggList: res        })        this.changeSearchCls()      })      .catch((err) =&gt; {        console.error(err)      })  }, 500),  // ...})</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> wxprogram </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/"/>
      <url>/js/</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head><meta name="generator" content="Hexo 3.9.0"><title></title></head><body><script type="text/javascript">function T(arg){this.a = arg;return this;}var a = T(2);var b = T(3);console.log(22);console.log(a.a);console.log(33);console.log(b.a);</script></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>movie</title>
      <link href="/movie/"/>
      <url>/movie/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/"/>
      <url>/about/</url>
      
        <content type="html"><![CDATA[<h2 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h2><ol><li>什么是事件委托<ol><li>将子元素的事件委托（绑定）给父元素</li></ol></li><li>事件委托的好处<ol><li>减少绑定的次数</li><li>提高性能</li><li>新添加的子元素也能享用之前绑定的事件</li></ol></li><li>事件委托的原理<ol><li>冒泡</li></ol></li><li>触发事件的是谁<ol><li>子元素</li></ol></li><li>如何找到触发事件的子元素<ol><li>event.target</li><li></li></ol></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试文章</title>
      <link href="/tags/"/>
      <url>/tags/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 标签1 </tag>
            
            <tag> 标签2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>download</title>
      <link href="/download/"/>
      <url>/download/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>abc</title>
      <link href="/abc/"/>
      <url>/abc/</url>
      
        <content type="html"><![CDATA[<p>分类<br>归档</p><p>标签云：#vue  #主题  #love</p><p>文章分类： 开源 生活  知识  随心</p><p>分类目录</p><p>近期文章</p><p>近期评论</p><p>功能： 管理站点<br>       登录</p><pre><code> https://hacpai.com/guide/markdown</code></pre><p>#隐藏文章 (不可行)</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>$ npm install hexo-sage-posts –save</p><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a><a href="https://github.com/printempw/hexo-sage-posts#usage" target="_blank" rel="noopener"></a>Usage</h2><p>Add <code>sage: true</code> to the <a href="https://hexo.io/docs/front-matter" target="_blank" rel="noopener">front-matter</a> of posts which you want to hide.</p><p>e.g. Edit <code>source/_posts/lorem-ipsum.md</code>:</p><pre><code>---title: &#39;Lorem Ipsum&#39;date: &#39;2019/8/10 11:45:14&#39;sage: true---Lorem ipsum dolor sit amet, consectetur adipiscing elit.</code></pre><p>This post will not be shown anywhere, but you can still access it by <code>https://hexo.test/lorem-ipsum/</code>.</p><h2 id="Config"><a href="#Config" class="headerlink" title="Config"></a><a href="https://github.com/printempw/hexo-sage-posts#config" target="_blank" rel="noopener"></a>Config</h2><p>In your site’s <code>_config.yml</code>:</p><h1 id="hexo-sage-posts"><a href="#hexo-sage-posts" class="headerlink" title="hexo-sage-posts"></a>hexo-sage-posts</h1><p>sage_posts:<br>  filter: hidden # Change the filter name to fit your need</p><p>And the posts of which the front-matter with a <code>hidden: true</code> will be your sage posts.</p><pre><code>---title: &#39;Lorem Ipsum&#39;date: &#39;2019/8/10 11:45:14&#39;hidden: true---Lorem ipsum dolor sit amet, consectetur adipiscing elit.</code></pre><p>1.（ctrl+K ）+（ctrl+S） 【查看快捷键菜单】</p><p>2.ctrl+A 【全选】</p><p>3.ctrl+S 【保存】</p><p>4.alt+B 【浏览器运行】</p><p>5.ctrl+Up/Down 【上下移动文档】</p><p>6.alt+Up/Down 【上下移动本行代码】</p><p>7.ctrl+Z 【返回上一步】</p><p>8.ctrl+Y 【返回上一步】</p><p>9.shift+alt+Up/Down 【向上/下复制本行代码】</p><p>10.shift+table 【取消缩进】</p><p>11.ctrl+B 【是否显示左边侧栏】</p><p>12.ctrl+P 【搜索】</p><p>13.ctrl+ -/+ 【代码缩放】</p><p>14.end键和home键</p><p>15.ctrl+shift+Right/Left 【选中】</p><p>16.ctrl+shift+N 【打开新窗口】</p><p>17.ctrl+shift+W 【关闭新窗口】</p><p>18.ctrl+N 【新建文件】</p><p>19.ctrl+table 【切换文件】</p><p>20.ctrl+ [ / ]  【代码行缩进】</p><p>21.ctrl+Enter 【在当前行下边插入一行】</p><p>22.ctrl+shift+Enter 【在当前行插入一行】</p><p>23.ctrl+Home 【移动到文件行首】</p><p>24.ctrl+End 【移动到文件末尾】</p><p>25.F12 【转移到定义处】</p><p>26.shift+Home/End 【选择光标行首或行尾】</p><p>27.ctrl+Delete 【删除光标右侧】</p><p>28.ctrl+shift+L【同时选中所有匹配】</p><p>29.F11【全屏显示】</p><p>30.ctrl+/ 【注释】</p><p>随机文章，随机标签，随机网页，随机动态。<br>word = rand()<br>word = rand(3,1)</p><pre><code class="javascript">当用户访问首页index.html时，设定跳转时间，跳转到随机文章页面如/news/???.html，如何实现？&quot;???&quot;为某个指定的区间，如1-100function goPage(){location.href=parsetInt(math.random()*100)+&quot;.html&quot;;}var t=setInterval(&quot;goPage()&quot;,6000);</code></pre><pre><code class="html">body {  background: url(https://source.unsplash.com/random/1600x900);  background-repeat: no-repeat;  background-attachment: fixed;  background-position: 50% 50%;  background-size: cover;}</code></pre><p>快速入门markdown</p><p>Markdown 支持两种标题的语法，Setext 和 atx 形式。Setext 形式是用底线的形式，利用 = （最高阶标题）和 - （第二阶标题），Atx 形式在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶。</p><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>dog’s back</p><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><blockquote><p>一个区间</p><p>一个段落在某个区间</p><h2 id="一个-H2"><a href="#一个-H2" class="headerlink" title="一个 H2"></a>一个 H2</h2></blockquote><p><em>em</em><br><strong>strong</strong><br><em>em</em><br><strong>strong</strong></p><ul><li>q</li><li>w</li><li>e</li></ul><ul><li>q</li><li>a</li><li>z</li></ul><ul><li>q</li><li>s</li><li>c</li></ul><ol><li>red</li><li>green</li><li>blue</li><li>black</li></ol><ul><li><p>yesterday</p></li><li><p>today</p></li><li><p>futrue</p></li></ul><p>这是一个<a href="http://kkkkk.com/" target="_blank" rel="noopener">链接</a></p><p>这是一个title属性的<a href="http://sssss.com/" title="with a title" target="_blank" rel="noopener">链接</a></p><p>参考形式的链接让你可以为链接定一个名称，之后你可以在文件的其他地方定义该链接的内容：</p><p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="noopener">Google</a> than from<br><a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="noopener">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="noopener">MSN</a>.</p><p>输出 HTML 为：</p><p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="noopener">Google</a> than from <a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="noopener">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="noopener">MSN</a>.</p>title 属性是选择性的，链接名称可以用字母、数字和空格，但是不分大小写：<p>I start my morning with a cup of coffee and<br><a href="http://www.nytimes.com/" target="_blank" rel="noopener">The New York Times</a>.</p><p>输出 HTML 为：</p><p>I start my morning with a cup of coffee and<a href="http://www.nytimes.com/" target="_blank" rel="noopener">The New York Times</a>.</p>图片图片的语法和链接很像。<p>行内形式（title 是选择性的）：</p><p><img src="/path/to/img.jpg" alt="alt text" title="Title"><br>参考形式：</p><p><img src="/path/to/img.jpg" alt="alt text" title="Title"></p><p>上面两种方法都会输出 HTML 为：</p><img src="/path/to/img.jpg" alt="alt text" title="Title">代码在一般的段落文字中，你可以使用反引号 ` 来标记代码区段，区段内的 &、< 和 > 都会被自动的转换成 HTML 实体，这项特性让你可以很容易的在代码区段内插入 HTML 码：<p>I strongly recommend against using any <code>&lt;blink&gt;</code> tags.</p><p>I wish SmartyPants used named entities like <code>&amp;mdash;</code><br>instead of decimal-encoded entites like <code>&amp;#8212;</code>.<br>输出 HTML 为：</p><p>I strongly recommend against using any<code>&lt;blink&gt;</code> tags.</p><p>I wish SmartyPants used named entities like<code>&amp;mdash;</code> instead of decimal-encodedentites like <code>&amp;#8212;</code>.</p><p>如果要建立一个已经格式化好的代码区块，只要每行都缩进 4 个空格或是一个 tab 就可以了，而 &amp;、&lt; 和 &gt; 也一样会自动转成 HTML 实体。</p><p>Markdown 语法:</p><p>If you want your page to validate under XHTML 1.0 Strict,<br>you’ve got to put paragraph tags in your blockquotes:</p><blockquote><p>For example.</p></blockquote>输出 HTML 为：<p>If you want your page to validate under XHTML 1.0 Strict,you've got to put paragraph tags in your blockquotes:</p><pre><code>&lt;blockquote&gt;&lt;p&gt;For example.&lt;/p&gt;&lt;/blockquote&gt;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> k </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
