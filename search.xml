<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>lorem-ipsum</title>
      <link href="/lorem-ipsum/"/>
      <url>/lorem-ipsum/</url>
      
        <content type="html"><![CDATA[<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/"/>
      <url>/js/</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><head><meta name="generator" content="Hexo 3.9.0"><title></title></head><body><script type="text/javascript">function T(arg){this.a = arg;return this;}var a = T(2);var b = T(3);console.log(22);console.log(a.a);console.log(33);console.log(b.a);</script></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>movie</title>
      <link href="/movie/"/>
      <url>/movie/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/"/>
      <url>/about/</url>
      
        <content type="html"><![CDATA[<h2 id="事件委托"><a href="#事件委托" class="headerlink" title="事件委托"></a>事件委托</h2><ol><li>什么是事件委托<ol><li>将子元素的事件委托（绑定）给父元素</li></ol></li><li>事件委托的好处<ol><li>减少绑定的次数</li><li>提高性能</li><li>新添加的子元素也能享用之前绑定的事件</li></ol></li><li>事件委托的原理<ol><li>冒泡</li></ol></li><li>触发事件的是谁<ol><li>子元素</li></ol></li><li>如何找到触发事件的子元素<ol><li>event.target</li><li></li></ol></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>测试文章</title>
      <link href="/tags/"/>
      <url>/tags/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 标签1 </tag>
            
            <tag> 标签2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>download</title>
      <link href="/download/"/>
      <url>/download/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> 资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>abc</title>
      <link href="/abc/"/>
      <url>/abc/</url>
      
        <content type="html"><![CDATA[<p>分类<br>归档</p><p>标签云：#vue  #主题  #love</p><p>文章分类： 开源 生活  知识  随心</p><p>分类目录</p><p>近期文章</p><p>近期评论</p><p>功能： 管理站点<br>       登录</p><pre><code> https://hacpai.com/guide/markdown</code></pre><p>#隐藏文章</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>$ npm install hexo-sage-posts –save</p><h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a><a href="https://github.com/printempw/hexo-sage-posts#usage" target="_blank" rel="noopener"></a>Usage</h2><p>Add <code>sage: true</code> to the <a href="https://hexo.io/docs/front-matter" target="_blank" rel="noopener">front-matter</a> of posts which you want to hide.</p><p>e.g. Edit <code>source/_posts/lorem-ipsum.md</code>:</p><pre><code>---title: &#39;Lorem Ipsum&#39;date: &#39;2019/8/10 11:45:14&#39;sage: true---Lorem ipsum dolor sit amet, consectetur adipiscing elit.</code></pre><p>This post will not be shown anywhere, but you can still access it by <code>https://hexo.test/lorem-ipsum/</code>.</p><h2 id="Config"><a href="#Config" class="headerlink" title="Config"></a><a href="https://github.com/printempw/hexo-sage-posts#config" target="_blank" rel="noopener"></a>Config</h2><p>In your site’s <code>_config.yml</code>:</p><h1 id="hexo-sage-posts"><a href="#hexo-sage-posts" class="headerlink" title="hexo-sage-posts"></a>hexo-sage-posts</h1><p>sage_posts:<br>  filter: hidden # Change the filter name to fit your need</p><p>And the posts of which the front-matter with a <code>hidden: true</code> will be your sage posts.</p><pre><code>---title: &#39;Lorem Ipsum&#39;date: &#39;2019/8/10 11:45:14&#39;hidden: true---Lorem ipsum dolor sit amet, consectetur adipiscing elit.</code></pre><p>1.（ctrl+K ）+（ctrl+S） 【查看快捷键菜单】</p><p>2.ctrl+A 【全选】</p><p>3.ctrl+S 【保存】</p><p>4.alt+B 【浏览器运行】</p><p>5.ctrl+Up/Down 【上下移动文档】</p><p>6.alt+Up/Down 【上下移动本行代码】</p><p>7.ctrl+Z 【返回上一步】</p><p>8.ctrl+Y 【返回上一步】</p><p>9.shift+alt+Up/Down 【向上/下复制本行代码】</p><p>10.shift+table 【取消缩进】</p><p>11.ctrl+B 【是否显示左边侧栏】</p><p>12.ctrl+P 【搜索】</p><p>13.ctrl+ -/+ 【代码缩放】</p><p>14.end键和home键</p><p>15.ctrl+shift+Right/Left 【选中】</p><p>16.ctrl+shift+N 【打开新窗口】</p><p>17.ctrl+shift+W 【关闭新窗口】</p><p>18.ctrl+N 【新建文件】</p><p>19.ctrl+table 【切换文件】</p><p>20.ctrl+ [ / ]  【代码行缩进】</p><p>21.ctrl+Enter 【在当前行下边插入一行】</p><p>22.ctrl+shift+Enter 【在当前行插入一行】</p><p>23.ctrl+Home 【移动到文件行首】</p><p>24.ctrl+End 【移动到文件末尾】</p><p>25.F12 【转移到定义处】</p><p>26.shift+Home/End 【选择光标行首或行尾】</p><p>27.ctrl+Delete 【删除光标右侧】</p><p>28.ctrl+shift+L【同时选中所有匹配】</p><p>29.F11【全屏显示】</p><p>30.ctrl+/ 【注释】</p><p>随机文章，随机标签，随机网页，随机动态。<br>word = rand()<br>word = rand(3,1)</p><pre><code class="javascript">当用户访问首页index.html时，设定跳转时间，跳转到随机文章页面如/news/???.html，如何实现？&quot;???&quot;为某个指定的区间，如1-100function goPage(){location.href=parsetInt(math.random()*100)+&quot;.html&quot;;}var t=setInterval(&quot;goPage()&quot;,6000);</code></pre><pre><code class="html">body {  background: url(https://source.unsplash.com/random/1600x900);  background-repeat: no-repeat;  background-attachment: fixed;  background-position: 50% 50%;  background-size: cover;}</code></pre><p>快速入门markdown</p><p>Markdown 支持两种标题的语法，Setext 和 atx 形式。Setext 形式是用底线的形式，利用 = （最高阶标题）和 - （第二阶标题），Atx 形式在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶。</p><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>dog’s back</p><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><blockquote><p>一个区间</p><p>一个段落在某个区间</p><h2 id="一个-H2"><a href="#一个-H2" class="headerlink" title="一个 H2"></a>一个 H2</h2></blockquote><p><em>em</em><br><strong>strong</strong><br><em>em</em><br><strong>strong</strong></p><ul><li>q</li><li>w</li><li>e</li></ul><ul><li>q</li><li>a</li><li>z</li></ul><ul><li>q</li><li>s</li><li>c</li></ul><ol><li>red</li><li>green</li><li>blue</li><li>black</li></ol><ul><li><p>yesterday</p></li><li><p>today</p></li><li><p>futrue</p></li></ul><p>这是一个<a href="http://kkkkk.com/" target="_blank" rel="noopener">链接</a></p><p>这是一个title属性的<a href="http://sssss.com/" title="with a title" target="_blank" rel="noopener">链接</a></p><p>参考形式的链接让你可以为链接定一个名称，之后你可以在文件的其他地方定义该链接的内容：</p><p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="noopener">Google</a> than from<br><a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="noopener">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="noopener">MSN</a>.</p><p>输出 HTML 为：</p><p>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="noopener">Google</a> than from <a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="noopener">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="noopener">MSN</a>.</p>title 属性是选择性的，链接名称可以用字母、数字和空格，但是不分大小写：<p>I start my morning with a cup of coffee and<br><a href="http://www.nytimes.com/" target="_blank" rel="noopener">The New York Times</a>.</p><p>输出 HTML 为：</p><p>I start my morning with a cup of coffee and<a href="http://www.nytimes.com/" target="_blank" rel="noopener">The New York Times</a>.</p>图片图片的语法和链接很像。<p>行内形式（title 是选择性的）：</p><p><img src="/path/to/img.jpg" alt="alt text" title="Title"><br>参考形式：</p><p><img src="/path/to/img.jpg" alt="alt text" title="Title"></p><p>上面两种方法都会输出 HTML 为：</p><img src="/path/to/img.jpg" alt="alt text" title="Title">代码在一般的段落文字中，你可以使用反引号 ` 来标记代码区段，区段内的 &、< 和 > 都会被自动的转换成 HTML 实体，这项特性让你可以很容易的在代码区段内插入 HTML 码：<p>I strongly recommend against using any <code>&lt;blink&gt;</code> tags.</p><p>I wish SmartyPants used named entities like <code>&amp;mdash;</code><br>instead of decimal-encoded entites like <code>&amp;#8212;</code>.<br>输出 HTML 为：</p><p>I strongly recommend against using any<code>&lt;blink&gt;</code> tags.</p><p>I wish SmartyPants used named entities like<code>&amp;mdash;</code> instead of decimal-encodedentites like <code>&amp;#8212;</code>.</p><p>如果要建立一个已经格式化好的代码区块，只要每行都缩进 4 个空格或是一个 tab 就可以了，而 &amp;、&lt; 和 &gt; 也一样会自动转成 HTML 实体。</p><p>Markdown 语法:</p><p>If you want your page to validate under XHTML 1.0 Strict,<br>you’ve got to put paragraph tags in your blockquotes:</p><blockquote><p>For example.</p></blockquote>输出 HTML 为：<p>If you want your page to validate under XHTML 1.0 Strict,you've got to put paragraph tags in your blockquotes:</p><pre><code>&lt;blockquote&gt;&lt;p&gt;For example.&lt;/p&gt;&lt;/blockquote&gt;</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> k </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
